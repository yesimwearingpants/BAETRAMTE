buildscript {
    repositories {
        mavenCentral()
        maven {
        	name = "forge"
        	url = "http://files.minecraftforge.net/maven"
        }
	maven {
		name = "sonatype"
		url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
	maven {
		name = "Qmunity"
		url = "http://maven.bluepowermod.com/"
	}
	maven { // The repo from which to get waila
		name "Mobius Repo"
		url "http://mobiusstrip.eu/maven"
	}
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'maven'
apply plugin: 'eclipse'


version = "0.0.0.01"
group= "com.yiwp.batmanplusplus" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "modid"

minecraft {
    version = "1.7.10-10.13.2.1291"
    build = "0"
    runDir = "eclipse"

	replaceIn "reference/Reference.java"
	replace "@VERSION@", project.version
	replace "@BUILD@", project.build
}

repositories {
	 maven {
		name 'DVS1 Maven FS'
		url 'http://dvs1.progwml6.com/files/maven'
	}
	maven { // the repo from which to get NEI and stuff
		name 'CB Repo'
		url "http://chickenbones.net/maven/"
	}
	maven {
		 url 'http://maven.cil.li/'
	}
	ivy {
		name 'FMP'
		artifactPattern "http://files.minecraftforge.net/[module]/[module]-dev-[revision].[ext]"
	}
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    compile "codechicken:CodeChickenLib:1.7.10-1.1.1.11:src"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.4.35:src"
    compile "codechicken:NotEnoughItems:1.0.4.83:src"
    compile "codechicken:EnderStorage:1.7.10-1.4.5.22:src"
    compile "codechicken:CodeChickenLib:1.7.10-1.1.1.11:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.4.35:dev"
    compile "codechicken:NotEnoughItems:1.0.4.83:dev"
    compile "tconstruct:TConstruct:1.7.10-1.8.2.build880:deobf"
    compile "codechicken:EnderStorage:1.7.10-1.4.5.22:dev"
    compile "mantle:Mantle:1.7.10-0.3.2.jenkins187:deobf"
    //compile group: 'thermalexpansion', name: 'ThermalExpansion', version: config.texpan.version, ext: 'jar'
    //compile group: 'cofh', name: 'CoFHCore', version: config.cofh.version, ext: 'jar'

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
